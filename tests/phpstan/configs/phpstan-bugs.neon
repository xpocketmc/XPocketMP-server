parameters:
	ignoreErrors:
		-
			message: "#^PHPDoc tag @param has invalid value \\(.+\\)\\: Unexpected token \"&\", expected variable at offset \\d+$#"
			path: ../../../src

		-
			message: "#^Default value of the parameter \\#\\d+ \\$[A-Za-z\\d_]+ \\(\\-?\\d+\\) of method .+\\(\\) is incompatible with type float\\.$#"
			path: ../../../src

		-
			message: "#^Cannot access an offset on Threaded\\.$#"
			path: ../../../src

		-
			message: "#^Cannot assign new offset to Threaded\\.$#"
			path: ../../../src

		-
			message: "#^Offset string does not exist on array\\(\\)\\.$#"
			count: 3
			path: ../../../src/pocketmine/MemoryManager.php

		-
			message: "#^Offset \\(int\\|string\\) does not exist on array\\(\\)\\.$#"
			count: 1
			path: ../../../src/pocketmine/MemoryManager.php

		-
			message: "#^Comparison operation \"\\>\\=\" between 0 and 2 is always false\\.$#"
			count: 1
			path: ../../../src/pocketmine/block/Liquid.php

		-
			#adjacentSources comparison FP
			message: "#^If condition is always false\\.$#"
			count: 1
			path: ../../../src/pocketmine/block/Liquid.php

		-
			#$class::NETWORK_ID false positive
			message: "#^Strict comparison using \\!\\=\\= between \\-1 and \\-1 will always evaluate to false\\.$#"
			count: 1
			path: ../../../src/pocketmine/entity/Entity.php

		-
			message: "#^Call to function assert\\(\\) with false and 'unknown hit type' will always evaluate to false\\.$#"
			count: 1
			path: ../../../src/pocketmine/entity/projectile/Projectile.php

		-
			message: "#^Strict comparison using \\=\\=\\= between int\\<min, 3\\> and 4 will always evaluate to false\\.$#"
			count: 1
			path: ../../../src/pocketmine/level/Level.php

		-
			message: "#^Instanceof between int and PharFileInfo will always evaluate to false\\.$#"
			count: 1
			path: ../../../src/pocketmine/plugin/PharPluginLoader.php

		-
			message: "#^Strict comparison using \\=\\=\\= between int\\<1, max\\> and 0 will always evaluate to false\\.$#"
			count: 1
			path: ../../../src/pocketmine/utils/Config.php

		-
			#ReflectionFunction::getClosureThis() should be nullable
			message: "#^Else branch is unreachable because ternary operator condition is always true\\.$#"
			count: 1
			path: ../../../src/pocketmine/utils/Utils.php

		-
			#ReflectionFunction::getClosureScopeClass() should be nullable
			message: "#^Unreachable statement \\- code above always terminates\\.$#"
			count: 1
			path: ../../../src/pocketmine/utils/Utils.php
